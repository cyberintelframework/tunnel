####################################
# Tunnel Server configuration file #
# SURFids 3.00                     #
# Changeset 007                    #
# 10-07-2009                       #
# Jan van Lith & Kees Trippelvitz  #
####################################

######################
# Changelog:
# 007 Added max batch amount for scanning
# 006 Fixed typo
# 005 Added extra logging options
# 004 Added UPX detection option
# 003 Added stuff for single-sensor support
# 002 Added scan_period
# 001 Added scan_method
######################

####################
# SURFids Options  #
####################
# The root directory for the SURFids files (no trailing forward slash).
$c_surfidsdir = "/opt/surfnetids";

#######################
# Database connection #
#######################
# User info for the logging user in the postgresql database
$c_pgsql_pass = "enter_password_here";
$c_pgsql_user = "idslog";

# Postgresql database info
$c_pgsql_host = "localhost";
$c_pgsql_dbname = "idsserver";

# The port number where the postgresql database is running on.
$c_pgsql_port = "5432";

# Connection string used by the perl scripts.
$c_dsn = "DBI:Pg:dbname=$c_pgsql_dbname;host=$c_pgsql_host;port=$c_pgsql_port";

##################
# Key generation #
##################

# The directory with the scripts to generate the keys.
$c_genkeysdir = "$c_surfidsdir/genkeys";
# The directory where the generated keys are stored.
$c_keysdir = "$c_surfidsdir/clientkeys";

# These 2 options are SURFnet specific options.
# Enable/disable soapconnection for certificate generation. 1=ON, 0=OFF
$c_certsoapconn = "0";
# The URL of the SOAP interface.
$c_soapurl = "enter_soap_url_here";
$c_soapuser = "enter_soap_user_here";
$c_soappass = "enter_soap_password_here";

###########     
# Logging #
###########     
# Method of logging
# 0 - Don't log anything
# 1 - Log to /var/log/surfids.log
# 2 - Log to the database
# 3 - Both option 1 and 2
$c_log_method = 3;

# Level of logging
# LOG_DEBUG => 0 
# LOG_INFO => 1 
# LOG_WARN => 2 
# LOG_ERROR => 3 
# LOG_CRITICAL => 4 
# Defines a number and logs all events with that number and higher
# Advised is to keep this level on LOG_INFO (1)
$c_log_level = 0;

# Log successful database queries yes/no (1/0)
# Turning this option ON can result into excessive logging
$c_log_success_query = 0;

################
# Perl scripts #
################
# Number of seconds the sql.pl script should wait for the tap device to get an IP address with DHCP.
# After this time expires, the script fails.
$c_sql_dhcp_retries = 60;

###############
# RRD scripts #
###############
# Directory where the temporary rrd pictures are stored
$c_imgdir = "/tmp";

# RRD library directory.
$c_rrddir = "/var/lib/rrd";

#####################
# Virus scan script #
#####################
# Nepenthes downloaded binaries directory.
# Example: /home/nepenthes/var/binaries
$c_bindir = "$c_surfidsdir/binaries/";

# This variable controls the way the scanbinaries script will scan the downloaded malware
# 0 - Scan all malware when run
# 1 - Scan only new malware
# 2 - Scan only new malware and undetected/suspicious malware
# 3 - Scan only new malware, undetected/suspicious malware and all malware per $c_scan_period
$c_scan_method = 0;

# Scan a file if it hasn't been scanned for $c_scan_period method.
# Only used when scan_method = 3
# Example: 10800 = 1 week
# Example: 21600 = 2 weeks
$c_scan_period = 10800;

# Limit for the period scans
# This is the amount of files that will be scanned based on the c_scan_period
# 0 = No maximum limit
# 100 = Max 100 files will be scanned based on the c_scan_period
# This is to balance the load on the system if more than c_scan_period_limit files
# are to be scanned.
$c_scan_period_limit = 100;

# Scan for UPX packers and store the result
$c_scan_upx = 0;

# The amount of files that will be scanned in a single batch
# for the scanners with batch mode = 1
# Batch mode is required for scanners that don't accept
# a large amount of files as arguments to the scanner (example: AVAST)
$c_scan_batch_max = 50;

######################
# TCP fingerprinting #
######################
# Enable p0f fingerprinting. 0 = OFF, 1 = ON
# Requires p0f to be installed.
$c_enable_pof = 0;

#################
# ARP Detection #
#################
# Enable the ARP detection script. 0 = OFF, 1 = ON
$c_enable_arp = 0;

# The time in seconds that the script will ignore alerts if it is a known alert
$c_arp_alert_expiry = 180;

# The refresh time in seconds of the static ARP list from the ARP module
$c_arp_static_refresh = 300;

# The refresh time of the dhcp static list
$c_dhcp_static_refresh = 300;

# The refresh time in seconds of the ARP cache from the ARP module
$c_arp_cache_refresh = 300;

# The refresh time in seconds of the sniff protos list
$c_sniff_protos_refresh = 300;

# The refresh time in seconds of the email reports
$c_mail_refresh = 300;

################
# Mail logging #
################

# Maillog From: address. This is the email adres that appears in the From header.
$c_from_address = 'enter_email_address_here';

# Maillog GNUPG passphrase.
$c_passphrase = "enter_GNU_passphrase_here";

# Prefix for the subject of email reports
$c_subject_prefix = "[SURFids] ";
