#!/usr/bin/perl

#########################################
# Caretaker script for the VLAN tunnels #
# SURFnet IDS                           #
# Version 2.10.02                       #
# 19-11-2007                            #
# Jan van Lith & Kees Trippelvitz       #
#########################################

###################
# Changelog:
# 2.10.02 Fixed bug with gw 
# 2.10.01 Initial release
###################
use Time::localtime qw(localtime);
use IO::Socket::INET;

$basedir = "/cdrom/scripts";
do "$basedir/sensor.conf";
do "$basedir/network_if.conf";
require "$basedir/functions.inc.pl";

sub getdatetime {
  my $stamp = time();
  $tm = localtime($stamp);
  my $ss = $tm->sec;
  my $mm = $tm->min;
  my $hh = $tm->hour;
  my $dd = $tm->mday;
  my $mo = $tm->mon + 1;
  my $yy = $tm->year + 1900;
  if ($ss < 10) { $ss = "0" .$ss; }
  if ($mm < 10) { $mm = "0" .$mm; }
  if ($hh < 10) { $hh = "0" .$hh; }
  if ($dd < 10) { $dd = "0" .$dd; }
  if ($mo < 10) { $mo = "0" .$mo; }
  my $datestring = "$dd-$mo-$yy $hh:$mm:$ss";
  return $datestring;
}

$tunnel = $ARGV[0];

$chkcare = `ps -ef | grep -v grep | grep -v $$ | grep caretaker | wc -l`;
chomp($chkcare);

if ($chkcare != 0) {
  exit;
}

@vlan_ar = `netstat -natep | grep "127.0.0.1" | grep openvpn | awk '{print \$4}' | awk -F":" '{print \$2}'`;

while (0 == 0) {
  foreach $manport (@vlan_ar) {
    $try = 0;
    chomp($manport);
#    print "PORT: $manport\n";
    my $sock = new IO::Socket::INET (
			PeerAddr => '127.0.0.1',
			PeerPort => $manport,
			Proto => 'tcp',
    );
    #print $sock "state\n";
    $conn = 0;
    $line = "";
    while ($conn == 0) {
      $nmapcheck = 0;
      $line = <$sock>;
      print $sock "state\n";
      if ($line =~ /.*RECONNECTING.*/) {
        # OpenVPN is trying to reconnect
        # Now we need to add default gateway, etc
#        print "$manport RECONNECTING\n";
    	$gw = `ps -ef | grep -v grep | grep openvpn | grep "127.0.0.1 $manport"| awk -F"gw" '{print \$2}' | awk '{print \$1}'`;
    	chomp($gw);
    	`ip route del default 2>/dev/null`;
    	`ip route add default via $gw 2>/dev/null`;
	$if = $manport - 1000;
  	$nmapchk = `nmap -e br$if -p 1194 $server -P0 2>/dev/null | grep 1194 | grep open | wc -l`;
        chomp($nmapchk);
 #       print "$manport NMAPCHK: $nmapchk\n";
	if ($nmapchk == 1) {
 #       	print "$manport RELEASED\n";
		print $sock "hold release\n";
		$rel = 0;
		$tryrel = 0;
		sleep 5;
      		while ($rel == 0) {
      			$line = <$sock>;
      			print $sock "state\n";
			if ($line =~ /.*CONNECTED.*/) {
#        			print "$manport CONNECTED AFTER RELEASED\n";
   				`ip route del default 2>/dev/null`;
				$rel = 1;
			}
			if ($tryrel == 25) {
 #       			print "$manport COULD NOT CONNECT AFTER RELEASE\n";
    				`ip route del default 2>/dev/null`;
				$rel = 1;
			}
			sleep 2;
			$tryrel++;
			
		}
		$conn = 1;
        }
	$try++;
        if ($try == 2) {
          # Try 2 times per VLAN, then continue
          $conn = 1;
        } else {
          sleep 2;
        }
      } elsif ($line =~ /.*CONNECTED.*/) {
  #      print "$manport CONNECTED\n";
        sleep 1;
	$conn = 1;
      }
    }
  }
  sleep 2;
}

