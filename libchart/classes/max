Axis.php:			$this->min = $min;
Axis.php:			$this->max = $max;
Axis.php:			$this->guide = 10;
Axis.php:			$norm = $this->delta / $this->magnitude;
Axis.php:			$posns = $this->guide / $norm;
Axis.php:			$this->tics = $tics * $this->magnitude;
Axis.php:			$this->delta = abs($this->max - $this->min);
Axis.php:			$this->magnitude = pow(10, floor(log10($this->delta)));
Axis.php:			$this->quantizeTics();
Axis.php:			$this->displayMin = floor($this->min / $this->tics) * $this->tics;
Axis.php:			$this->displayMax = ceil($this->max / $this->tics) * $this->tics;
Axis.php:			$this->sampleCount = $sampleCount;
Axis.php:			$this->yMinValue = $yMinValue;
Axis.php:			$this->yMaxValue = $yMaxValue;
Axis.php:			return $this->displayMin;
Axis.php:			return $this->displayMax;
Axis.php:			return $this->tics;
BarChart.php:			$this->setMargin(5);
BarChart.php:			$point = current($this->point);
BarChart.php:			foreach($this->point as $point)
BarChart.php:			$this->yMinValue = isset($this->lowerBound) ? $this->lowerBound : $yMin;
BarChart.php:			$this->yMaxValue = isset($this->upperBound) ? $this->upperBound : $yMax;
BarChart.php:			$this->sampleCount = count($this->point);
BarChart.php:			$this->lowerBound = $lowerBound;
BarChart.php:			$this->upperBound = $upperBound;
BarChart.php:			$this->axis = new Axis($this->yMinValue, $this->yMaxValue);
BarChart.php:			$this->axis->computeBoundaries();
BarChart.php:			$this->graphTLX = $this->margin + $this->labelMarginLeft;
BarChart.php:			$this->graphTLY = $this->margin + $this->labelMarginTop;
BarChart.php:			$this->graphBRX = $this->width - $this->margin - $this->labelMarginRight;
BarChart.php:			$this->graphBRY = $this->height - $this->margin - $this->labelMarginBottom;
BarChart.php:			$this->axisColor1 = imagecolorallocate($this->img, 201, 201, 201);
BarChart.php:			$this->axisColor2 = imagecolorallocate($this->img, 158, 158, 158);
BarChart.php:			$this->aquaColor1 = imagecolorallocate($this->img, 242, 242, 242);
BarChart.php:			$this->aquaColor2 = imagecolorallocate($this->img, 231, 231, 231);
BarChart.php:			$this->aquaColor3 = imagecolorallocate($this->img, 239, 239, 239);
BarChart.php:			$this->aquaColor4 = imagecolorallocate($this->img, 253, 253, 253);
BarChart.php:			$this->barColor1 = imagecolorallocate($this->img, 42, 71, 181);
BarChart.php:			$this->barColor2 = imagecolorallocate($this->img, 33, 56, 143);
BarChart.php:			$aquaColor = Array($this->aquaColor1, $this->aquaColor2, $this->aquaColor3, $this->aquaColor4);
BarChart.php:			for($i = $this->graphTLY; $i < $this->graphBRY; $i++)
BarChart.php:				imageline($this->img, $this->graphTLX, $i, $this->graphBRX, $i, $aquaColor[($i + 3) % 4]);
BarChart.php:			imagerectangle($this->img, $this->graphTLX - 1, $this->graphTLY, $this->graphTLX, $this->graphBRY, $this->axisColor1);
BarChart.php:			imagerectangle($this->img, $this->graphTLX - 1, $this->graphBRY, $this->graphBRX, $this->graphBRY + 1, $this->axisColor1);
Chart.php:			$this->width = $width;
Chart.php:			$this->height = $height;
Chart.php:			$this->reset();
Chart.php:			$this->text = new Text();		
Chart.php:			$this->point = array();
Chart.php:			unset($this->lowerBound);
Chart.php:			unset($this->upperBound);
Chart.php:			$this->setTitle("Untitled chart");
Chart.php:			$this->setLogo(dirname(__FILE__) . "/../images/PoweredBy.png");
Chart.php:			array_push($this->point, $point);
Chart.php:			$this->title = $title;
Chart.php:			$this->logoFileName = $logoFileName;
Chart.php:			$this->text->printCentered($this->img, ($this->labelMarginTop + $this->margin) / 2, $this->textColor, $this->title, $this->text->fontCondensedBold);
Chart.php:			@$logoImage = imageCreateFromPNG($this->logoFileName);
Chart.php:				imagecopymerge($this->img, $logoImage, 2*$this->margin, $this->margin, 0, 0, imagesx($logoImage), imagesy($logoImage), 100);
Chart.php:			$this->margin = $margin;
Chart.php:			$this->labelMarginLeft = $labelMarginLeft;
Chart.php:			$this->labelMarginRight = $labelMarginRight;
Chart.php:			$this->labelMarginTop = $labelMarginTop;
Chart.php:			$this->labelMarginBottom = $labelMarginBottom;
Chart.php:			$this->img = imagecreatetruecolor($this->width, $this->height);
Chart.php:			$this->backGroundColor = imagecolorallocate($this->img, 255, 255, 255);
Chart.php:			$this->textColor = imagecolorallocate($this->img, 0, 0, 0);
Chart.php:			imagefilledrectangle($this->img, 0, 0, $this->width - 1, $this->height - 1, $this->backGroundColor);
HorizontalChart.php:			$this->setLabelMarginLeft(150);
HorizontalChart.php:			$this->setLabelMarginRight(30);
HorizontalChart.php:			$this->setLabelMarginTop(40);
HorizontalChart.php:			$this->setLabelMarginBottom(30);
HorizontalChart.php:			$minValue = $this->axis->getLowerBoundary();
HorizontalChart.php:			$maxValue = $this->axis->getUpperBoundary();
HorizontalChart.php:			$stepValue = $this->axis->getTics();
HorizontalChart.php:				$x = $this->graphTLX + ($value - $minValue) * ($this->graphBRX - $this->graphTLX) / ($maxValue - $minValue);
HorizontalChart.php:				imagerectangle($this->img, $x - 1, $this->graphBRY + 2, $x, $this->graphBRY + 3, $this->axisColor1);
HorizontalChart.php:				imagerectangle($this->img, $x - 1, $this->graphBRY, $x, $this->graphBRY + 1, $this->axisColor2);
HorizontalChart.php:				$this->text->printText($this->img, $x, $this->graphBRY + 5, $this->textColor, number_format($value), $this->text->fontCondensed, $this->text->HORIZONTAL_CENTER_ALIGN);
HorizontalChart.php:			$rowHeight = ($this->graphBRY - $this->graphTLY) / $this->sampleCount;
HorizontalChart.php:			reset($this->point);
HorizontalChart.php:			for($i = 0; $i <= $this->sampleCount; $i++)
HorizontalChart.php:				$y = $this->graphBRY - $i * $rowHeight;
HorizontalChart.php:				imagerectangle($this->img, $this->graphTLX - 3, $y, $this->graphTLX - 2, $y + 1, $this->axisColor1);
HorizontalChart.php:				imagerectangle($this->img, $this->graphTLX - 1, $y, $this->graphTLX, $y + 1, $this->axisColor2);
HorizontalChart.php:				if($i < $this->sampleCount)
HorizontalChart.php:					$point = current($this->point);
HorizontalChart.php:					next($this->point);
HorizontalChart.php:					$this->text->printText($this->img, $this->graphTLX - 5, $y - $rowHeight / 2, $this->textColor, $text, $this->text->fontCondensed, $this->text->HORIZONTAL_RIGHT_ALIGN | $this->text->VERTICAL_CENTER_ALIGN);
HorizontalChart.php:			reset($this->point);
HorizontalChart.php:			$minValue = $this->axis->getLowerBoundary();
HorizontalChart.php:			$maxValue = $this->axis->getUpperBoundary();
HorizontalChart.php:			$stepValue = $this->axis->getTics();
HorizontalChart.php:			$rowHeight = ($this->graphBRY - $this->graphTLY) / $this->sampleCount;
HorizontalChart.php:			for($i = 0; $i < $this->sampleCount; $i++)
HorizontalChart.php:				$y = $this->graphBRY - $i * $rowHeight;
HorizontalChart.php:				$point = current($this->point);
HorizontalChart.php:				next($this->point);
HorizontalChart.php:				$xmax = $this->graphTLX + ($value - $minValue) * ($this->graphBRX - $this->graphTLX) / ($maxValue - $minValue);
HorizontalChart.php:				$this->text->printText($this->img, $xmax + 5, $y - $rowHeight / 2, $this->textColor, $value, $this->text->fontCondensed, $this->text->VERTICAL_CENTER_ALIGN);
HorizontalChart.php:				imagefilledrectangle($this->img, $this->graphTLX + 1, $y1, $xmax, $y2, $this->barColor2);
HorizontalChart.php:				imagefilledrectangle($this->img, $this->graphTLX + 2, $y1+1, $xmax - 4, $y2, $this->barColor1);
HorizontalChart.php:			$this->computeBound();
HorizontalChart.php:			$this->computeLabelMargin();
HorizontalChart.php:			$this->createImage();
HorizontalChart.php:			$this->printLogo();
HorizontalChart.php:			$this->printTitle();
HorizontalChart.php:			$this->printAxis();
HorizontalChart.php:			$this->printBar();
HorizontalChart.php:				imagepng($this->img, $fileName);
HorizontalChart.php:				imagepng($this->img);
PieChart.php:			$this->setMargin(5);
PieChart.php:			$this->setLabelMarginLeft(30);
PieChart.php:			$this->setLabelMarginRight(30);
PieChart.php:			$this->setLabelMarginTop(50);
PieChart.php:			$this->setLabelMarginBottom(30);
PieChart.php:			$this->setLabelMarginCenter(20);
PieChart.php:			$this->setPieRatio(0.55);
PieChart.php:			$this->labelBoxWidth = 15;
PieChart.php:			$this->labelBoxHeight = 15;
PieChart.php:			$this->pieRatio = $pieRatio;
PieChart.php:			$this->total = 0;
PieChart.php:			$this->percent = array();
PieChart.php:			foreach($this->point as $point)
PieChart.php:				$this->total += $point->getY();
PieChart.php:			foreach($this->point as $point)
PieChart.php:				$percent = 100 * $point->getY() / $this->total;
PieChart.php:				array_push($this->percent, array($percent, $point));
PieChart.php:			usort($this->percent, array("PieChart", "sortPie"));
PieChart.php:			$this->labelMarginCenter = $labelMarginCenter;
PieChart.php:			imagefilledrectangle($this->img, $x1, $y1, $x2, $y2, $this->axisColor1);
PieChart.php:			imagerectangle($this->img, $x1, $y1, $x1 + 1, $y1 + 1, $this->axisColor2);
PieChart.php:			imagerectangle($this->img, $x2 - 1, $y1, $x2, $y1 + 1, $this->axisColor2);
PieChart.php:			imagerectangle($this->img, $x1, $y2 - 1, $x1 + 1, $y2, $this->axisColor2);
PieChart.php:			imagerectangle($this->img, $x2 - 1, $y2 - 1, $x2, $y2, $this->axisColor2);
PieChart.php:			$graphWidth = $this->width - $this->margin * 2 - $this->labelMarginLeft - $this->labelMarginCenter - $this->labelMarginRight;
PieChart.php:			$this->pieTLX = $this->margin + $this->labelMarginLeft;
PieChart.php:			$this->pieTLY = $this->margin + $this->labelMarginTop;
PieChart.php:			$this->pieBRX = $this->pieTLX + $graphWidth * $this->pieRatio;
PieChart.php:			$this->pieBRY = $this->height - $this->margin - $this->labelMarginBottom;
PieChart.php:			$this->pieCenterX = $this->pieTLX + ($this->pieBRX - $this->pieTLX) / 2;
PieChart.php:			$this->pieCenterY = $this->pieTLY + ($this->pieBRY - $this->pieTLY) / 2;
PieChart.php:			$this->pieWidth = round(($this->pieBRX - $this->pieTLX) * 4 / 5);
PieChart.php:			$this->pieHeight = round(($this->pieBRY - $this->pieTLY) * 3.7 / 5);
PieChart.php:			$this->pieDepth = round($this->pieWidth * 0.05);
PieChart.php:			$this->labelTLX = $this->pieBRX + $this->labelMarginCenter;
PieChart.php:			$this->labelTLY = $this->pieTLY;
PieChart.php:			$this->labelBRX = $this->pieTLX + $this->labelMarginCenter + $graphWidth;
PieChart.php:			$this->labelBRY = $this->pieBRY;
PieChart.php:			$this->pieColor = array();
PieChart.php:			$this->pieShadowColor = array();
PieChart.php:				$color = imagecolorallocate($this->img, $red, $green, $blue);
PieChart.php:				$shadowColor = imagecolorallocate($this->img, $red * $shadowFactor, $green * $shadowFactor, $blue * $shadowFactor);
PieChart.php:				array_push($this->pieColor, $color);
PieChart.php:				array_push($this->pieShadowColor, $shadowColor);
PieChart.php:			$this->axisColor1 = imagecolorallocate($this->img, 201, 201, 201);
PieChart.php:			$this->axisColor2 = imagecolorallocate($this->img, 158, 158, 158);
PieChart.php:			$this->aquaColor1 = imagecolorallocate($this->img, 242, 242, 242);
PieChart.php:			$this->aquaColor2 = imagecolorallocate($this->img, 231, 231, 231);
PieChart.php:			$this->aquaColor3 = imagecolorallocate($this->img, 239, 239, 239);
PieChart.php:			$this->aquaColor4 = imagecolorallocate($this->img, 253, 253, 253);
PieChart.php:			$this->outlinedBox($this->pieTLX, $this->pieTLY, $this->pieBRX, $this->pieBRY);
PieChart.php:			$aquaColor = Array($this->aquaColor1, $this->aquaColor2, $this->aquaColor3, $this->aquaColor4);
PieChart.php:			for($i = $this->pieTLY + 2; $i < $this->pieBRY - 1; $i++)
PieChart.php:				imageline($this->img, $this->pieTLX + 2, $i, $this->pieBRX - 2, $i, $aquaColor[($i + 3) % 4]);
PieChart.php:			$boxX1 = $this->labelTLX + $this->margin;
PieChart.php:			$boxX2 = $boxX1 + $this->labelBoxWidth;
PieChart.php:			foreach($this->percent as $a)
PieChart.php:				$color = $this->pieColor[$i % count($this->pieColor)];
PieChart.php:				$boxY1 = $this->labelTLY + $this->margin + $i * ($this->labelBoxHeight + $this->margin);
PieChart.php:				$boxY2 = $boxY1 + $this->labelBoxHeight;
PieChart.php:				$this->outlinedBox($boxX1, $boxY1, $boxX2, $boxY2);
PieChart.php:				imagefilledrectangle($this->img, $boxX1 + 2, $boxY1 + 2, $boxX2 - 2, $boxY2 - 2, $color);
PieChart.php:				$this->text->printText($this->img, $boxX2 + $this->margin, $boxY1 + $this->labelBoxHeight / 2, $this->textColor, $legend, $this->text->fontCondensed, $this->text->VERTICAL_CENTER_ALIGN);
PieChart.php:			foreach($this->percent as $a)
PieChart.php:				imagefilledarc($this->img, $this->pieCenterX, $cy, $this->pieWidth, $this->pieHeight, $angle1, $angle2, $color, $mode);
PieChart.php:			foreach($this->percent as $a)
PieChart.php:				$x = cos($angle) * ($this->pieWidth + 35) / 2 + $this->pieCenterX;
PieChart.php:				$y = sin($angle) * ($this->pieHeight + 35) / 2 + $this->pieCenterY;
PieChart.php:				$this->text->printText($this->img, $x, $y, $this->textColor, $text, $this->text->fontCondensed, $this->text->HORIZONTAL_CENTER_ALIGN | $this->text->VERTICAL_CENTER_ALIGN);
PieChart.php:			for ($cy = $this->pieCenterY + $this->pieDepth / 2; $cy >= $this->pieCenterY - $this->pieDepth / 2; $cy--)
PieChart.php:				$this->drawDisc($cy, $this->pieShadowColor, IMG_ARC_EDGED | IMG_ARC_NOFILL);
PieChart.php:			$this->drawDisc($this->pieCenterY - $this->pieDepth / 2, $this->pieColor, IMG_ARC_FILL);
PieChart.php:			$this->drawPercent();
PieChart.php:			$this->computeLabelMargin();
PieChart.php:			$this->computePercent();
PieChart.php:			$this->createImage();
PieChart.php:			$this->printTitle();
PieChart.php:			$this->printPie();
PieChart.php:			$this->printLabel();
PieChart.php:				imagepng($this->img, $fileName);
PieChart.php:				imagepng($this->img);
Point.php:			$this->x = $x;
Point.php:			$this->y = $y;
Point.php:			return $this->x;
Point.php:			return $this->y;
Text.php:			$this->fontCondensed = dirname(__FILE__) . "/../fonts/DejaVuSansCondensed.ttf";
Text.php:			$this->fontCondensedBold = dirname(__FILE__) . "/../fonts/DejaVuSansCondensed-Bold.ttf";
Text.php:			if(!($align & $this->HORIZONTAL_CENTER_ALIGN) && !($align & $this->HORIZONTAL_RIGHT_ALIGN))
Text.php:				$align |= $this->HORIZONTAL_LEFT_ALIGN;
Text.php:			if(!($align & $this->VERTICAL_CENTER_ALIGN) && !($align & $this->VERTICAL_BOTTOM_ALIGN))
Text.php:				$align |= $this->VERTICAL_TOP_ALIGN;
Text.php:			if($align & $this->HORIZONTAL_CENTER_ALIGN)
Text.php:			if($align & $this->HORIZONTAL_RIGHT_ALIGN)
Text.php:			if($align & $this->VERTICAL_CENTER_ALIGN)
Text.php:			if($align & $this->VERTICAL_TOP_ALIGN)
Text.php:			$this->printText($img, imagesx($img) / 2, $py, $color, $text, $fontFileName, $this->HORIZONTAL_CENTER_ALIGN | $this->VERTICAL_CENTER_ALIGN);
Text.php:			$fontFileName = $this->fontCondensed;
VerticalChart.php:			$this->setLabelMarginLeft(50);
VerticalChart.php:			$this->setLabelMarginRight(30);
VerticalChart.php:			$this->setLabelMarginTop(40);
VerticalChart.php:			$this->setLabelMarginBottom(50);
VerticalChart.php:			$minValue = $this->axis->getLowerBoundary();
VerticalChart.php:			$maxValue = $this->axis->getUpperBoundary();
VerticalChart.php:			$stepValue = $this->axis->getTics();
VerticalChart.php:				$y = $this->graphBRY - ($value - $minValue) * ($this->graphBRY - $this->graphTLY) / ($maxValue - $minValue);
VerticalChart.php:				imagerectangle($this->img, $this->graphTLX - 3, $y, $this->graphTLX - 2, $y + 1, $this->axisColor1);
VerticalChart.php:				imagerectangle($this->img, $this->graphTLX - 1, $y, $this->graphTLX, $y + 1, $this->axisColor2);
VerticalChart.php:				$this->text->printText($this->img, $this->graphTLX - 5, $y, $this->textColor, number_format($value), $this->text->fontCondensed, $this->text->HORIZONTAL_RIGHT_ALIGN | $this->text->VERTICAL_CENTER_ALIGN);
VerticalChart.php:			$columnWidth = ($this->graphBRX - $this->graphTLX) / $this->sampleCount;
VerticalChart.php:			reset($this->point);
VerticalChart.php:			for($i = 0; $i <= $this->sampleCount; $i++)
VerticalChart.php:				$x = $this->graphTLX + $i * $columnWidth;
VerticalChart.php:				imagerectangle($this->img, $x - 1, $this->graphBRY + 2, $x, $this->graphBRY + 3, $this->axisColor1);
VerticalChart.php:				imagerectangle($this->img, $x - 1, $this->graphBRY, $x, $this->graphBRY + 1, $this->axisColor2);
VerticalChart.php:				if($i < $this->sampleCount)
VerticalChart.php:					$point = current($this->point);
VerticalChart.php:					next($this->point);
VerticalChart.php:					$this->text->printDiagonal($this->img, $x + $columnWidth * 1 / 3, $this->graphBRY + 10, $this->textColor, $text);
VerticalChart.php:			reset($this->point);
VerticalChart.php:			$minValue = $this->axis->getLowerBoundary();
VerticalChart.php:			$maxValue = $this->axis->getUpperBoundary();
VerticalChart.php:			$stepValue = $this->axis->getTics();
VerticalChart.php:			$columnWidth = ($this->graphBRX - $this->graphTLX) / $this->sampleCount;
VerticalChart.php:			for($i = 0; $i < $this->sampleCount; $i++)
VerticalChart.php:				$x = $this->graphTLX + $i * ($this->graphBRX - $this->graphTLX) / $this->sampleCount;
VerticalChart.php:				$point = current($this->point);
VerticalChart.php:				next($this->point);
VerticalChart.php:				$ymin = $this->graphBRY - ($value - $minValue) * ($this->graphBRY - $this->graphTLY) / ($maxValue - $minValue);
VerticalChart.php:				$this->text->printText($this->img, $x + $columnWidth / 2, $ymin - 5, $this->textColor, number_format($value), $this->text->fontCondensed, $this->text->HORIZONTAL_CENTER_ALIGN | $this->text->VERTICAL_BOTTOM_ALIGN);
VerticalChart.php:				imagefilledrectangle($this->img, $x1, $ymin, $x2, $this->graphBRY - 1, $this->barColor2);
VerticalChart.php:				imagefilledrectangle($this->img, $x1 + 1, $ymin + 1, $x2 - 4, $this->graphBRY - 1, $this->barColor1);
VerticalChart.php:			$this->computeBound();
VerticalChart.php:			$this->computeLabelMargin();
VerticalChart.php:			$this->createImage();
VerticalChart.php:			$this->printLogo();
VerticalChart.php:			$this->printTitle();
VerticalChart.php:			$this->printAxis();
VerticalChart.php:			$this->printBar();
VerticalChart.php:				imagepng($this->img, $fileName);
VerticalChart.php:				imagepng($this->img);
